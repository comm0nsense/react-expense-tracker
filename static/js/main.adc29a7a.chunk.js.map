{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","evt","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEneteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseDate","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc29a7a.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n  const dropdownChangeHandler = (evt) => {\n    props.onFilterChange(evt.target.value);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from \"react\";\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n    const month = props.date.toLocaleString('en-us', { month: 'long' });\n    const day = props.date.toLocaleString('en-us', { day: '2-digit' });\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}\n\nexport default ExpenseDate;","import React from \"react\";\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={props.date} />\n                <div className=\"expense-item__description\">\n                    <h2>{props.title}</h2>\n                    <div className=\"expense-item__price\">${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n}\n\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n\n    if (props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses are found.</h2>\n    }\n\n    return (<ul className=\"expenses-list\">\n        {props.items.map((expense) => (\n            <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))}\n    </ul>)\n}\n\nexport default ExpensesList;","import './ChartBar.css';\n\nconst ChartBar = props => {\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n}\n\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\nimport './Chart.css';\n\nconst Chart = props => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMax = Math.max(...dataPointValues);\n\n    return <div className=\"chart\">\n        {props.dataPoints.map(dataPoint =>\n            <ChartBar\n                key={dataPoint.label}\n                value={dataPoint.value}\n                maxValue={totalMax}\n                label={dataPoint.label}\n            />\n        )}\n    </div>\n}\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n    const chartDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ]\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart;","import React, { useState } from \"react\";\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst DEFAULT_YEAR = '2021';\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(DEFAULT_YEAR);\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    }\n\n    const filteredExpenses = props.items\n        .filter(expense => expense.date.getFullYear().toString() === filteredYear);\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onFilterChange={filterChangeHandler}\n                />\n                <ExpensesChart expenses={filteredExpenses}/>\n                <ExpensesList items={filteredExpenses}/>\n            </Card>\n        </div>\n    );\n}\n\nexport default Expenses;","import React, { useState } from \"react\";\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEneteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    const titleChangeHandler = (evt) => {\n        setEnteredTitle(evt.target.value);\n    }\n\n    const amountChangeHandler = (evt) => {\n        setEneteredAmount(evt.target.value);\n    }\n\n    const dateChangeHandler = (evt) => {\n        setEnteredDate(evt.target.value);\n    }\n\n    const submitHandler = (evt) => {\n        evt.preventDefault();\n\n        const expenseDate = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        }\n\n        props.onSaveExpenseData(expenseDate);\n        setEnteredTitle('');\n        setEneteredAmount('');\n        setEnteredDate('');\n    }\n\n    return <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input\n                    type='text'\n                    value={enteredTitle}\n                    onChange={titleChangeHandler}\n                />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input\n                    type='number'\n                    value={enteredAmount}\n                    min=\"0.01\"\n                    step=\"0.01\"\n                    onChange={amountChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input\n                    type='date'\n                    value={enteredDate}\n                    min=\"2019-01-01\"\n                    max=\"2022-12-31\"\n                    onChange={dateChangeHandler}\n                />\n            </div>\n        </div>\n\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button type='submit'>Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;","import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    // console.log(stateType);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n    //option 1\n    // if (isAdding) {\n    //     return (\n    //         <div className=\"new-expense\">\n    //             <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    //         </div>)\n    // }\n\n    // return <div className=\"new-expense\">\n    //     <button onClick={addingNewExpenseHandler}>Add New Expense</button>\n    // </div>\n\n    //option 2\n    return (<div className=\"new-expense\">\n        {!isEditing && (\n            <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n        {isEditing && (\n            <ExpenseForm\n                onSaveExpenseData={saveExpenseDataHandler}\n                onCancel={stopEditingHandler} />\n        )}\n    </div>);\n}\n\nexport default NewExpense;","import React, {useState} from \"react\";\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => { \n    setExpenses((prevExpenses) => {\n\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div >\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}